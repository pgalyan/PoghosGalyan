[{"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\index.js":"1","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\App.js":"2","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\reportWebVitals.js":"3","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\addTask\\AddNewTask.js":"4","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\Task\\Task.js":"5","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\ToDo\\ToDo.js":"6","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\AddTask\\AddNewTask.js":"7","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Helpers\\IdGen.js":"8","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\TaskDeleteConfirm\\TaskDeleteConfirm.js":"9","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\TaskModal\\TaskModal.js":"10","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Helpers\\date.js":"11","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\Navbar\\NavBar.js":"12","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\Contact\\Contact.js":"13","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\About\\About.js":"14","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\SingleTask\\SingleTask.js":"15","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\Preloader\\Preloader.js":"16","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\NotFound\\NotFound.js":"17","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\ContactForm\\ContactForm.jsx":"18","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Helpers\\validators.js":"19","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\ContactForm\\ContactFormHooks.jsx":"20","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Context\\ContactPageContext.jsx":"21","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Demo\\ReduxCounter.js":"22","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Redux\\store.js":"23","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Demo\\ReduxInputResult.js":"24"},{"size":863,"mtime":1617451836897,"results":"25","hashOfConfig":"26"},{"size":1662,"mtime":1617458141115,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":889,"mtime":1612986378319,"results":"29","hashOfConfig":"26"},{"size":1883,"mtime":1615709138241,"results":"30","hashOfConfig":"26"},{"size":10127,"mtime":1616506923762,"results":"31","hashOfConfig":"26"},{"size":2922,"mtime":1614884464150,"results":"32","hashOfConfig":"26"},{"size":105,"mtime":1613253931535,"results":"33","hashOfConfig":"26"},{"size":817,"mtime":1614882331871,"results":"34","hashOfConfig":"26"},{"size":3832,"mtime":1616358835009,"results":"35","hashOfConfig":"26"},{"size":101,"mtime":1615665566767,"results":"36","hashOfConfig":"26"},{"size":869,"mtime":1616366980140,"results":"37","hashOfConfig":"26"},{"size":427,"mtime":1616878966807,"results":"38","hashOfConfig":"26"},{"size":216,"mtime":1615680568741,"results":"39","hashOfConfig":"26"},{"size":9377,"mtime":1616917674109,"results":"40","hashOfConfig":"26"},{"size":241,"mtime":1616364477328,"results":"41","hashOfConfig":"26"},{"size":282,"mtime":1616369049652,"results":"42","hashOfConfig":"26"},{"size":5030,"mtime":1616854736313,"results":"43","hashOfConfig":"26"},{"size":957,"mtime":1616852819846,"results":"44","hashOfConfig":"26"},{"size":2491,"mtime":1616884440465,"results":"45","hashOfConfig":"26"},{"size":2760,"mtime":1616884428236,"results":"46","hashOfConfig":"26"},{"size":983,"mtime":1617457709765,"results":"47","hashOfConfig":"26"},{"size":965,"mtime":1617458887954,"results":"48","hashOfConfig":"26"},{"size":1233,"mtime":1617459018252,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mc6cb4",{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\index.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\App.js",["106","107","108","109"],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\reportWebVitals.js",[],["110","111"],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\addTask\\AddNewTask.js",[],["112","113"],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\Task\\Task.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\ToDo\\ToDo.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\AddTask\\AddNewTask.js",[],["114","115"],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Helpers\\IdGen.js",[],["116","117"],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\TaskDeleteConfirm\\TaskDeleteConfirm.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\TaskModal\\TaskModal.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Helpers\\date.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\Navbar\\NavBar.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\Contact\\Contact.js",["118"],"import React from 'react'\r\nimport ContactForm from '../../ContactForm/ContactForm'\r\nimport ContactFormHooks from '../../ContactForm/ContactFormHooks'\r\n\r\nclass Contact extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Contact Us</h1>\r\n\r\n                {/* <ContactForm /> */}\r\n                <ContactFormHooks />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\About\\About.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\SingleTask\\SingleTask.js",["119"],"import React, { useReducer, useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport TaskModal from '../../../Components/TaskModal/TaskModal'\r\nimport styles from './SingleTask.module.css'\r\n// import { useEffect, useReducer } from 'react'\r\n\r\n// class SingleTask extends React.Component {\r\n//     state = {\r\n//         singleTask: null,\r\n//         isEditModalOpen: false,\r\n//     }\r\n\r\n//     toggleEditModal = () => {\r\n//         this.setState({\r\n//             isEditModalOpen: !this.state.isEditModalOpen\r\n//         })\r\n//     }\r\n\r\n//     hendleGoBack = () => {\r\n//         this.props.history.goBack();\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         const { id } = this.props.match.params\r\n//         fetch(`http://localhost:3001/task/${id}`)\r\n//             .then(res => res.json())\r\n//             .then(data => {\r\n//                 if (data.error)\r\n//                     throw data.error\r\n\r\n//                 this.setState({\r\n//                     singleTask: data,\r\n//                 })\r\n\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error(\"Request error\", error)\r\n//                 this.props.history.push('/')\r\n//             })\r\n//     }\r\n\r\n//     hendleEditTask = (formData) => {\r\n//         fetch(\"http://localhost:3001/task/\" + formData._id, {\r\n//             method: \"PUT\",\r\n//             body: JSON.stringify(formData),\r\n//             headers: {\r\n//                 \"Content-type\": \"application/json\"\r\n//             }\r\n//         })\r\n//             .then(res => res.json())\r\n//             .then(data => {\r\n//                 // console.log('data',data);\r\n//                 if (data.error) {\r\n//                     throw data.error\r\n//                 }\r\n\r\n//                 this.setState({\r\n//                     singleTask: data\r\n//                 })\r\n//             })\r\n//             .catch(error => {\r\n//                 console.log('error', error);\r\n\r\n//             })\r\n//     }\r\n\r\n//     deleteSingleTask = () => {\r\n//         const id = this.props.match.params.id\r\n//         fetch(`http://localhost:3001/task/${id}`, {\r\n//             method: 'DELETE'\r\n//         })\r\n//             .then(res => res.json())\r\n//             .then(data => {\r\n//                 if (data.error) {\r\n//                     throw data.error\r\n//                 }\r\n//                 this.props.history.push('/')\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error('error', error)\r\n//             })\r\n//     }\r\n\r\n//     render() {\r\n//         const { singleTask, isEditModalOpen } = this.state\r\n\r\n//         if (!singleTask) {\r\n\r\n//             return <div>\r\n//                 <span>Loading...</span>\r\n//             </div>\r\n//         }\r\n\r\n//         return (\r\n//             <>\r\n//                 <div className={styles.task}>\r\n//                     <h1>Single Page</h1>\r\n\r\n//                     <div>\r\n//                         <Button\r\n//                             onClick={this.hendleGoBack}\r\n//                         >\r\n//                             Go back\r\n//                         </Button>\r\n//                     </div>\r\n\r\n//                     <div className={styles.taskBody}>\r\n//                         <div>\r\n//                             <h4>Title</h4> {singleTask.title}\r\n//                         </div>\r\n//                         <div>\r\n//                             <h4>Description</h4> {singleTask.description}\r\n//                         </div>\r\n//                         <div>\r\n//                             <h4>Date</h4> {singleTask.date}\r\n//                         </div>\r\n//                         <div>\r\n//                             <h4>Created at</h4> {singleTask.created_at}\r\n//                         </div>\r\n//                     </div>\r\n//                     <div>\r\n//                         <Button\r\n//                             variant=\"danger\"\r\n//                             onClick={() => this.deleteSingleTask()}\r\n//                         >\r\n//                             Del\r\n//                 </Button>\r\n//                         <Button\r\n//                             variant=\"warning\"\r\n//                             className=\"ml-2\"\r\n//                             onClick={this.toggleEditModal}\r\n//                         >\r\n//                             Edit\r\n//                  </Button>\r\n//                     </div>\r\n//                 </div >\r\n//                 {\r\n//                     isEditModalOpen && <TaskModal\r\n//                         editTaskData={singleTask}\r\n//                         onHide={this.toggleEditModal}\r\n//                         onSubmit={this.hendleEditTask}\r\n//                         AddNewTask={false}\r\n//                     />\r\n//                 }\r\n//             </>\r\n//         )\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    singleTask: null,\r\n    isEditModalOpen: false,\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"toggleEditModal\":\r\n            return {\r\n                ...state,\r\n                isEditModalOpen: !state.isEditModalOpen\r\n            }\r\n        case \"setSingleTask\":\r\n            return {\r\n                ...state,\r\n                singleTask: action.data\r\n            }\r\n\r\n        case \"editeTask\":\r\n            return {\r\n                ...state,\r\n                singleTask: action.data\r\n            }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nconst SingleTask = (props) => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    useEffect(() => {\r\n        const { id } = props.match.params\r\n        fetch(`http://localhost:3001/task/${id}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error)\r\n                    throw data.error\r\n                dispatch({ type: \"setSingleTask\", data: data });\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Request error\", error)\r\n                props.history.push('/')\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    const hendleEditTask = (formData) => {\r\n        fetch(\"http://localhost:3001/task/\" + formData._id, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(formData),\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    throw data.error\r\n                }\r\n                dispatch({ type: 'editeTask', data: data })\r\n            })\r\n            .catch(error => {\r\n                console.log('error', error);\r\n\r\n            })\r\n    }\r\n\r\n    const deleteSingleTask = () => {\r\n                const id = props.match.params.id\r\n                fetch(`http://localhost:3001/task/${id}`, {\r\n                    method: 'DELETE'\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(data => {\r\n                        if (data.error) {\r\n                            throw data.error\r\n                        }\r\n                        props.history.push('/')\r\n                    })\r\n                    .catch(error => {\r\n                        console.error('error', error)\r\n                    })\r\n            }\r\n\r\n\r\n    const hendleGoBack = () => {\r\n                props.history.goBack();\r\n            }\r\n\r\n\r\n    const { singleTask, isEditModalOpen } = state\r\n\r\n    if (!singleTask) {\r\n        return <div>\r\n            <span>Loading...</span>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.task}>\r\n                <h1>Single Page</h1>\r\n                <div>\r\n                    <Button\r\n                        onClick={hendleGoBack}\r\n                    >\r\n                        Go back\r\n                                </Button>\r\n                </div>\r\n\r\n                <div className={styles.taskBody}>\r\n                    <div>\r\n                        <h4>Title</h4> {singleTask.title}\r\n                    </div>\r\n                    <div>\r\n                        <h4>Description</h4> {singleTask.description}\r\n                    </div>\r\n                    <div>\r\n                        <h4>Date</h4> {singleTask.date}\r\n                    </div>\r\n                    <div>\r\n                        <h4>Created at</h4> {singleTask.created_at}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => deleteSingleTask}\r\n                    >\r\n                        Del\r\n                        </Button>\r\n                    <Button\r\n                        variant=\"warning\"\r\n                        className=\"ml-2\"\r\n                        onClick={() => dispatch({ type: \"toggleEditModal\" })}\r\n                    >\r\n                        Edit\r\n                         </Button>\r\n                </div>\r\n            </div >\r\n            {\r\n                isEditModalOpen && <TaskModal\r\n                    editTaskData={singleTask}\r\n                    onHide={() => dispatch({ type: \"toggleEditModal\" })}\r\n                    onSubmit={hendleEditTask}\r\n                    AddNewTask={false}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default SingleTask","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\Preloader\\Preloader.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\NotFound\\NotFound.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\ContactForm\\ContactForm.jsx",["120"],"import React from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport styles from './ContactForm.module.css'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { isRequired, maxLength, minLength, emailValidation, isAllValid } from '../../Helpers/validators'\r\n\r\nconst inputsInfo = [\r\n    {\r\n        name: \"name\",\r\n        controlId: \"formBasicName\",\r\n        label: \"Name\",\r\n        type: \"text\",\r\n    },\r\n    {\r\n        name: \"email\",\r\n        controlId: \"formBasicEmail\",\r\n        label: \"Email\",\r\n        type: \"email\",\r\n    },\r\n    {\r\n        name: \"message\",\r\n        controlId: \"textareaForContactPage\",\r\n        label: \"Message\",\r\n        as: \"textarea\",\r\n        rows: 3,\r\n        maxLength: 100,\r\n    },\r\n\r\n]\r\n\r\nclass ContactForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: {\r\n                value: \"\",\r\n                valid: false,\r\n                error: \"\"\r\n            },\r\n            email: {\r\n                value: \"\",\r\n                valid: false,\r\n                error: \"\"\r\n            },\r\n            message: {\r\n                value: \"\",\r\n                valid: false,\r\n                error: \"\"\r\n            },\r\n\r\n            errorMessage: \"\",\r\n            \r\n        }\r\n    }\r\n\r\n    hendleChange = (event) => {\r\n        const { name, value } = event.target\r\n        let error = null\r\n        let valid = true\r\n        const maxLength16 = maxLength(16)\r\n        const minLength2 = minLength(2)\r\n        // if(isRequired(value)){\r\n        //     valid = false\r\n        //     error = isRequired(value)\r\n        // }else\r\n\r\n        // if(maxLength16(value)){\r\n        //     valid = false\r\n        //     error = maxLength16(value)\r\n        // }else\r\n\r\n        // if(minLength2(value)){\r\n        //     valid = false\r\n        //     error = minLength2(value)\r\n        // }\r\n\r\n\r\n        switch (name) {\r\n            case \"name\":\r\n            case \"email\":\r\n            case \"message\":\r\n                error = isRequired(value) ||\r\n                    (name === \"email\" && emailValidation(value)) ||\r\n                    minLength2(value) ||\r\n                    maxLength16(value);\r\n                break;\r\n            default: ;\r\n        }\r\n\r\n\r\n        this.setState({\r\n            [name]: {\r\n                value,\r\n                valid: !!!error,\r\n                error\r\n            },\r\n            isValid: isAllValid(this.state)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    hendleSubmit = () => {\r\n        const contactData = { ...this.state }\r\n\r\n        delete contactData.errorMassage\r\n\r\n        for (let key in contactData) {\r\n            contactData[key] = contactData[key].value\r\n        }\r\n\r\n        fetch('http://localhost:3001/form', {\r\n            method: 'POST',\r\n            body: JSON.stringify(contactData),\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    throw data.error\r\n                }\r\n                this.props.history.push(\"/\");\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    errorMassage: error.massage\r\n                })\r\n\r\n                console.log(\"catch-error\", error)\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const {name, email, message, errorMessage} = this.state\r\n\r\n        const isValid = name.valid && email.valid && message.valid\r\n\r\n        const inputs = inputsInfo.map((item, index) => {\r\n            return (\r\n                <Form.Group\r\n                    controlId={item.controlId}\r\n                    key={index}\r\n                >\r\n                    <Form.Label>{item.label}</Form.Label>\r\n                    <Form.Control\r\n\r\n                        name={item.name}\r\n                        type={item.type}\r\n                        as={item.as}\r\n                        placeholder={item.label}\r\n                        onChange={this.hendleChange}\r\n                        value={this.state[item.name].value}\r\n\r\n                    />\r\n                    <Form.Text className={styles.text} > {this.state[item.name].error}</Form.Text>\r\n                </Form.Group>\r\n            )\r\n        })\r\n        return (\r\n            <div className={styles.form}>\r\n\r\n\r\n                <Form onSubmit={(e) => e.preventDefault()} >\r\n\r\n                    <p style={{ color: \"red\", textTransform: \"uppercase\" }}>\r\n                        {errorMessage}\r\n                    </p>\r\n\r\n                    {inputs}\r\n\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        type=\"submit\"\r\n                        onClick={this.hendleSubmit}\r\n                        disabled={!isValid}\r\n                    >\r\n                        Send massage\r\n                      </Button>\r\n                </Form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default withRouter(ContactForm)\r\n\r\n\r\n\r\n","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Helpers\\validators.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\ContactForm\\ContactFormHooks.jsx",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Context\\ContactPageContext.jsx",["121","122"],"import { createContext, useState } from 'react';\r\nimport {\r\n    isRequired, maxLength, minLength, emailValidation, isAllValid } from '../Helpers/validators';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport const ContactContext = createContext();\r\n\r\nconst ContactContextProvider = (props) => {\r\n    const [formData, setFormData] = useState({\r\n        name: {\r\n            value: \"\",\r\n            valid: false,\r\n            error: \"\"\r\n        },\r\n        email: {\r\n            value: \"\",\r\n            valid: false,\r\n            error: \"\"\r\n        },\r\n        message: {\r\n            value: \"\",\r\n            valid: false,\r\n            error: \"\"\r\n        },\r\n    })\r\n\r\n    const [errorMessage , setErrormessage] = useState(\"\")\r\n\r\n\r\n    const hendleChange = (event) => {\r\n        const { name, value } = event.target\r\n        let error = null\r\n        let valid = true\r\n        const maxLength16 = maxLength(16)\r\n        const minLength2 = minLength(2)\r\n        switch (name) {\r\n            case \"name\":\r\n            case \"email\":\r\n            case \"message\":\r\n                error = isRequired(value) ||\r\n                    (name === \"email\" && emailValidation(value)) ||\r\n                    minLength2(value) ||\r\n                    maxLength16(value);\r\n                break;\r\n            default: ;\r\n        }\r\n\r\n        setFormData({\r\n            ...formData,\r\n            [name]: {\r\n                value,\r\n                valid: !!!error,\r\n                error\r\n            },\r\n        })\r\n    }\r\n\r\n    const hendleSubmit = () => {\r\n        const contactData = { ...formData}\r\n\r\n        // delete contactData.errorMassage\r\n\r\n        for (let key in contactData) {\r\n            contactData[key] = contactData[key].value\r\n        }\r\n\r\n        fetch('http://localhost:3001/form', {\r\n            method: 'POST',\r\n            body: JSON.stringify(contactData),\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    throw data.error\r\n                }\r\n                props.history.push(\"/\");\r\n            })\r\n            .catch(error => {\r\n                \r\n                setErrormessage({\r\n                    errorMassage: error.massage\r\n                })\r\n\r\n                console.log(\"catch-error\", error)\r\n            })\r\n    }\r\n\r\n    return <ContactContext.Provider\r\n        value={\r\n            {\r\n                errorMessage,\r\n                formData,\r\n                hendleChange,\r\n                hendleSubmit\r\n            }\r\n        }\r\n    >\r\n        {props.children}\r\n    </ContactContext.Provider>\r\n}\r\n\r\n\r\nexport default withRouter(ContactContextProvider);","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Demo\\ReduxCounter.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Redux\\store.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Demo\\ReduxInputResult.js",[],{"ruleId":"123","severity":1,"message":"124","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":14},{"ruleId":"123","severity":1,"message":"127","line":7,"column":10,"nodeType":"125","messageId":"126","endLine":7,"endColumn":18},{"ruleId":"123","severity":1,"message":"128","line":7,"column":27,"nodeType":"125","messageId":"126","endLine":7,"endColumn":33},{"ruleId":"123","severity":1,"message":"129","line":42,"column":9,"nodeType":"125","messageId":"126","endLine":42,"endColumn":19},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"134"},{"ruleId":"132","replacedBy":"135"},{"ruleId":"130","replacedBy":"136"},{"ruleId":"132","replacedBy":"137"},{"ruleId":"130","replacedBy":"138"},{"ruleId":"132","replacedBy":"139"},{"ruleId":"123","severity":1,"message":"140","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":195,"column":8,"nodeType":"143","endLine":195,"endColumn":10,"suggestions":"144"},{"ruleId":"123","severity":1,"message":"145","line":59,"column":13,"nodeType":"125","messageId":"126","endLine":59,"endColumn":18},{"ruleId":"123","severity":1,"message":"146","line":3,"column":56,"nodeType":"125","messageId":"126","endLine":3,"endColumn":66},{"ruleId":"123","severity":1,"message":"145","line":33,"column":13,"nodeType":"125","messageId":"126","endLine":33,"endColumn":18},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Switch' is defined but never used.","'pagesRouts' is assigned a value but never used.","no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],["147"],["148"],["147"],["148"],"'ContactForm' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history' and 'props.match.params'. Either include them or remove the dependency array.","ArrayExpression",["149"],"'valid' is assigned a value but never used.","'isAllValid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [props.history, props.match.params]",{"range":"152","text":"153"},[6062,6064],"[props.history, props.match.params]"]