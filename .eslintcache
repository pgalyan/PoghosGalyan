[{"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\index.js":"1","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\App.js":"2","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\reportWebVitals.js":"3","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\addTask\\AddNewTask.js":"4","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\Task\\Task.js":"5","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\ToDo\\ToDo.js":"6","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\AddTask\\AddNewTask.js":"7","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Helpers\\IdGen.js":"8","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\TaskDeleteConfirm\\TaskDeleteConfirm.js":"9","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\TaskModal\\TaskModal.js":"10","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Helpers\\date.js":"11","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\Navbar\\NavBar.js":"12","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\Contact\\Contact.js":"13","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\About\\About.js":"14","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\SingleTask\\SingleTask.js":"15","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\Preloader\\Preloader.js":"16","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\NotFound\\NotFound.js":"17"},{"size":717,"mtime":1615679539107,"results":"18","hashOfConfig":"19"},{"size":1106,"mtime":1616367658031,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":889,"mtime":1612986378319,"results":"22","hashOfConfig":"19"},{"size":1883,"mtime":1615709138241,"results":"23","hashOfConfig":"19"},{"size":10134,"mtime":1616366367427,"results":"24","hashOfConfig":"19"},{"size":2922,"mtime":1614884464150,"results":"25","hashOfConfig":"19"},{"size":105,"mtime":1613253931535,"results":"26","hashOfConfig":"19"},{"size":817,"mtime":1614882331871,"results":"27","hashOfConfig":"19"},{"size":3832,"mtime":1616358835009,"results":"28","hashOfConfig":"19"},{"size":101,"mtime":1615665566767,"results":"29","hashOfConfig":"19"},{"size":869,"mtime":1616366980140,"results":"30","hashOfConfig":"19"},{"size":222,"mtime":1615680538777,"results":"31","hashOfConfig":"19"},{"size":216,"mtime":1615680568741,"results":"32","hashOfConfig":"19"},{"size":4489,"mtime":1616370448625,"results":"33","hashOfConfig":"19"},{"size":241,"mtime":1616364477328,"results":"34","hashOfConfig":"19"},{"size":282,"mtime":1616369049652,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1mc6cb4",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\index.js",[],["75","76"],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\App.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\reportWebVitals.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\addTask\\AddNewTask.js",[],["77","78"],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\Task\\Task.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\ToDo\\ToDo.js",["79"],"import React, { Component } from 'react'\r\nimport Task from '../Task/Task.js'\r\n// import AddTask from \"../AddTask/AddNewTask\"\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\n// import IdGenerator from '../../Helpers/IdGen'\r\nimport TaskDeleteConfirm from '../TaskDeleteConfirm/TaskDeleteConfirm'\r\nimport TaskEditModal from '../TaskModal/TaskModal'\r\n// import PropTypes from 'prop-types'\r\nimport dateFormatter from '../../Helpers/date'\r\nimport Preloader from '../Preloader/Preloader'\r\n\r\nclass ToDo extends Component {\r\n    state = {\r\n        tasks: [],\r\n        removeTasks: new Set(),\r\n        isConfirmModal: false,\r\n        editTaskData: null,\r\n        AddNewTask: false,\r\n        loading: false\r\n    }\r\n\r\n    handleSubmit = (formdata) => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        if (!formdata.title || !formdata.description)\r\n            return;\r\n        formdata.date = dateFormatter(formdata.date)\r\n        const tasks = [...this.state.tasks]\r\n        fetch(\"http://localhost:3001/task\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(formdata),\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    throw data.error\r\n                }\r\n                tasks.push(data);\r\n                this.setState({\r\n                    tasks\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(\"catch-error\", error)\r\n            })\r\n            .finally(() => {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    handleDeleteOneTask = (_id) => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n\r\n        let tasks = [...this.state.tasks]\r\n        fetch(\"http://localhost:3001/task/\" + _id, {\r\n            method: \"DELETE\",\r\n            // body: JSON.stringify(formdata),\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    throw data.error\r\n                }\r\n                tasks = tasks.filter(item => item._id !== _id)\r\n                this.setState({\r\n                    tasks\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(\"catch-error\", error)\r\n            })\r\n            .finally(() => {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n\r\n    }\r\n\r\n    toggleSetRemoveTaskId = (_id) => {\r\n        let removeTasks = new Set(this.state.removeTasks)\r\n\r\n        if (removeTasks.has(_id)) {\r\n            removeTasks.delete(_id)\r\n        } else {\r\n            removeTasks = removeTasks.add(_id)\r\n        }\r\n        this.setState({\r\n            removeTasks\r\n        })\r\n    }\r\n\r\n    toggleSetSelectAllTasks = () => {\r\n        let tasks = [...this.state.tasks]\r\n        let removeTasks = new Set(this.state.removeTasks)\r\n\r\n        if (removeTasks.size !== 0) {\r\n            removeTasks.clear()\r\n        } else {\r\n            for (let key in tasks) {\r\n                removeTasks.add(tasks[key]._id)\r\n            }\r\n        }\r\n        this.setState({\r\n            removeTasks\r\n        })\r\n    }\r\n\r\n    removeSelectedTasks = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        fetch(\"http://localhost:3001/task\", {\r\n            method: \"PATCH\",\r\n            body: JSON.stringify({ tasks: Array.from(this.state.removeTasks) }),\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    throw data.error\r\n                }\r\n                let tasks = [...this.state.tasks]\r\n                let removeTasks = new Set(this.state.removeTasks)\r\n                tasks = tasks.filter(item => !removeTasks.has(item._id))\r\n                this.setState({\r\n                    tasks,\r\n                    removeTasks: new Set()\r\n                })\r\n            })\r\n            .finally(() => {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    handleToggleOpenModal = () => {\r\n        this.setState({\r\n            isConfirmModal: !this.state.isConfirmModal\r\n        });\r\n    }\r\n\r\n    hendleSetEditTask = (task) => {\r\n\r\n        this.setState({\r\n            editTaskData: task\r\n        })\r\n    }\r\n\r\n    setEditeTableDataNull = () => {\r\n        this.setState({\r\n            editTaskData: null,\r\n            AddNewTask: false\r\n        })\r\n    }\r\n\r\n    hendleEditTask = (editedTask) => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n     \r\n\r\n        fetch(\"http://localhost:3001/task/\" + editedTask._id, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(editedTask),\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // console.log('data',data);\r\n                if (data.error) {\r\n                    throw data.error\r\n                }\r\n                const tasks = [...this.state.tasks]\r\n                const index = tasks.findIndex(el => el._id === data._id)\r\n                tasks[index] = data\r\n                this.setState({\r\n                    tasks\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log('error', error);\r\n            })\r\n            .finally(() => {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            })\r\n            \r\n    }\r\n\r\n    hendleAddNewTask = () => {\r\n        this.setState({\r\n            AddNewTask: true,\r\n            editTaskData: true\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        fetch(\"http://localhost:3001/task\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    throw data.error\r\n                }\r\n                this.setState({\r\n                    tasks: data,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Get tasks request error\", error)\r\n\r\n            })\r\n            .finally(() => {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const removeTasks = new Set(this.state.removeTasks)\r\n\r\n        const { isConfirmModal, editTaskData, AddNewTask, tasks, loading } = this.state\r\n\r\n\r\n\r\n\r\n        const Tasks = this.state.tasks.map((task) => {\r\n            return (\r\n                <Col\r\n                    xs={12}\r\n                    md={4}\r\n                    lg={3}\r\n                    className='mr-3 mb-3'\r\n                    key={task._id}\r\n\r\n                >\r\n                    <Task\r\n                        task={task}\r\n                        handleDeleteOneTask={this.handleDeleteOneTask}\r\n                        toggleSetRemoveTaskId={this.toggleSetRemoveTaskId}\r\n                        disabled={!!removeTasks.size}\r\n                        checked={removeTasks.has(task._id)}\r\n                        hendleSetEditTask={this.hendleSetEditTask}\r\n                    />\r\n                </Col>\r\n            )\r\n        })\r\n\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <Row className=\" justify-content-md-center mt-3 mb-3\">\r\n                        <Button\r\n                            variant=\"outline-secondary\"\r\n                            onClick={this.hendleAddNewTask}\r\n                            disabled={!!removeTasks.size}\r\n                        >\r\n                            Add task\r\n                            </Button>\r\n                    </Row>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        {loading && <Preloader />}\r\n                        {!Tasks.length && !loading && <div>Tasks is Empty</div>}\r\n\r\n                        {Tasks}\r\n\r\n                    </Row>\r\n                    <Row className=\"justify-content-md-center mt-2 \">\r\n                        <Col>\r\n                            <Button\r\n                                className=\"mr-2\"\r\n                                variant=\"danger\"\r\n                                onClick={this.handleToggleOpenModal}\r\n                                disabled={!!!removeTasks.size}\r\n                            >\r\n                                Remove Selected\r\n                            </Button>\r\n\r\n                            <Button\r\n                                onClick={this.toggleSetSelectAllTasks}\r\n                                disabled={!!!this.state.tasks.length}\r\n                            >\r\n                                {!!!removeTasks.size ? `Select all tasks` : `Unelect all tasks`}\r\n\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                {\r\n                    isConfirmModal && <TaskDeleteConfirm\r\n                        onHide={this.handleToggleOpenModal}\r\n                        onSubmit={this.removeSelectedTasks}\r\n                        selectedTasks={removeTasks.size}\r\n\r\n                    />\r\n                }\r\n\r\n                {\r\n                    editTaskData && <TaskEditModal\r\n                        editTaskData={editTaskData}\r\n                        onHide={this.setEditeTableDataNull}\r\n                        onSubmit={this.hendleEditTask}\r\n                        AddNewTask={AddNewTask}\r\n                        handleSubmit={this.handleSubmit}\r\n\r\n                    />\r\n\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ToDo","C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\AddTask\\AddNewTask.js",[],["80","81"],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Helpers\\IdGen.js",[],["82","83"],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\TaskDeleteConfirm\\TaskDeleteConfirm.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\TaskModal\\TaskModal.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Helpers\\date.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\Navbar\\NavBar.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\Contact\\Contact.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\About\\About.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\SingleTask\\SingleTask.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\Preloader\\Preloader.js",[],"C:\\Users\\Poghos\\Desktop\\react\\poghosgalyan\\src\\Components\\pages\\NotFound\\NotFound.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"84","replacedBy":"88"},{"ruleId":"86","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":247,"column":59,"nodeType":"92","messageId":"93","endLine":247,"endColumn":64},{"ruleId":"84","replacedBy":"94"},{"ruleId":"86","replacedBy":"95"},{"ruleId":"84","replacedBy":"96"},{"ruleId":"86","replacedBy":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],["98"],["99"],"no-unused-vars","'tasks' is assigned a value but never used.","Identifier","unusedVar",["98"],["99"],["98"],["99"],"no-global-assign","no-unsafe-negation"]